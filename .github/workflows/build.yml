name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd32, amd64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build for ${{ matrix.arch }}
      run: |
        mkdir build-${{ matrix.arch }}
        cd build-${{ matrix.arch }}
        gcc -o myapp-${{ matrix.arch }} ../main.c

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: myapp-${{ matrix.arch }}
        path: build-${{ matrix.arch }}/myapp-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Artifacts amd32
      uses: actions/download-artifact@v3
      with:
        name: myapp-amd32
        path: myapp-amd32

    - name: Download Artifacts amd64
      uses: actions/download-artifact@v3
      with:
        name: myapp-amd64
        path: myapp-amd64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset amd32
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: myapp-amd32/myapp-amd32
        asset_name: myapp-amd32
        asset_content_type: application/octet-stream

    - name: Upload Release Asset amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: myapp-amd64/myapp-amd64
        asset_name: myapp-amd64
        asset_content_type: application/octet-stream
